workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH != "gh-pages"'
    - changes:
        - '**/allure-history.yml'
      when: never

cache:
  policy: pull-push
  paths:
    - .m2/repository
    - .gradle/caches

stages:
  - build
  - test
  - history
  - allure
  - deploy

build:
  stage: build
  image: gradle:alpine
  tags:
    - docker
  script: ./gradlew compileTestJava
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - build
      - .gradle

test:
  stage: test
  image: gradle:alpine
  tags:
    - docker
  script: ./gradlew test
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - build
      - .gradle
  artifacts:
    when: always
    paths:
      - build/allure-results
    expire_in: 1 day

allure-history:
  stage: history
  tags:
    - docker
  image: storytel/alpine-bash-curl
  script:
    - apk add unzip
    - 'curl --location --output artifacts.zip "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/jobs/artifacts/master/download?job=pages&job_token=${CI_JOB_TOKEN}"'
    - unzip artifacts.zip
    - chmod -R 777 public
    - cp -r ./public/history ./build/allure-results
  allow_failure: true
  artifacts:
    paths:
      - ./build/allure-results
    expire_in: 1 day
  rules:
    - when: always

allure-report:
  stage: allure
  tags:
    - docker
  image: frankescobar/allure-docker-service
  script:
    - allure generate -c ./build/allure-results -o ./allure-report
  artifacts:
    paths:
      - ./build/allure-results
      - ./allure-report
    expire_in: 1 day
  rules:
    - when: always

pages:
  stage: deploy
  script:
    - mv ./allure-report/ public/
  artifacts:
    paths:
      - public
  rules:
    - when: always

